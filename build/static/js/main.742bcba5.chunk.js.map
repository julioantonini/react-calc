{"version":3,"sources":["components/Button.jsx","main/Calculator.jsx","components/Display.jsx","serviceWorker.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","props","a","createElement","onClick","e","click","label","className","concat","operation","double","triple","initialState","displayValue","clearDisplay","values","current","Calculator","_this","Object","C_Users_Julio_react_reactcalc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_Julio_react_reactcalc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Julio_react_reactcalc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","C_Users_Julio_react_reactcalc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","clearMemory","bind","C_Users_Julio_react_reactcalc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","setOperation","addDigit","setState","equals","currentOperation","C_Users_Julio_react_reactcalc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","eval","value","includes","i","newValue","parseFloat","react__WEBPACK_IMPORTED_MODULE_8___default","_components_Display__WEBPACK_IMPORTED_MODULE_11__","_components_Button__WEBPACK_IMPORTED_MODULE_10__","Component","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uFAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAC,EAAA,IAGeG,EAAA,WAAAC,GAAK,OAClBH,EAAAI,EAAAC,cAAA,UACAC,QAAS,SAAAC,GAAC,OAAIJ,EAAMK,OAASL,EAAMK,MAAML,EAAMM,QAC/CC,UAAS,qCAAAC,OAEGR,EAAMS,UAAY,YAAc,GAFnC,kBAAAD,OAGGR,EAAMU,OAAS,SAAW,GAH7B,kBAAAF,OAIGR,EAAMW,OAAS,SAAW,GAJ7B,eAORX,EAAMM,igECHHM,aAAe,CACnBC,aAAc,IACdC,cAAc,EACdL,UAAW,KACXM,OAAQ,CAAC,EAAG,GACZC,QAAS,GAEUC,gCAInB,SAAAA,WAAYjB,GAAO,IAAAkB,EAAA,OAAAC,OAAAC,qJAAA,EAAAD,CAAAE,KAAAJ,aACjBC,EAAAC,OAAAG,gKAAA,EAAAH,CAAAE,KAAAF,OAAAI,qJAAA,EAAAJ,CAAAF,YAAAO,KAAAH,KAAMrB,KAHRyB,MAEmBN,OAAAO,mJAAA,EAAAP,CAAA,GAFNP,cAKXM,EAAKS,YAAcT,EAAKS,YAAYC,KAAjBT,OAAAU,4JAAA,EAAAV,CAAAD,IACnBA,EAAKY,aAAeZ,EAAKY,aAAaF,KAAlBT,OAAAU,4JAAA,EAAAV,CAAAD,IACpBA,EAAKa,SAAWb,EAAKa,SAASH,KAAdT,OAAAU,4JAAA,EAAAV,CAAAD,IALCA,qYAWjBG,KAAKW,SAALb,OAAAO,mJAAA,EAAAP,CAAA,GAAmBP,iEAGRH,WACX,GAA0B,IAAvBY,KAAKI,MAAMT,QACK,MAAdP,WACDY,KAAKW,SAAS,CAAEvB,oBAAWO,QAAS,EAAGF,cAAc,QACpD,CACH,IAAMmB,OAAuB,MAAdxB,UACTyB,iBAAmBb,KAAKI,MAAMhB,UAG9BM,OAAMI,OAAAgB,wJAAA,EAAAhB,CAAOE,KAAKI,MAAMV,QAC9B,IACEA,OAAO,GAAKqB,KAAI,GAAA5B,OAAIO,OAAO,GAAX,KAAAP,OAAiB0B,iBAAjB,KAAA1B,OAAqCO,OAAO,KAC5D,MAAOX,GACPW,OAAO,GAAKM,KAAKI,MAAMY,MAAM,GAG/BtB,OAAO,GAAK,EAEZM,KAAKW,SAAS,CACZnB,aAAcE,OAAO,GACrBN,UAAWwB,OAAS,KAAOxB,UAC3BO,QAASiB,OAAS,EAAI,EACtBnB,cAAemB,OACflB,kDAKGjB,GACP,GAAU,MAANA,IAAauB,KAAKI,MAAMZ,aAAayB,SAAS,KAAlD,CAMA,IAGMzB,GAH2C,MAA5BQ,KAAKI,MAAMZ,cAC3BQ,KAAKI,MAAMX,aACoB,GAAKO,KAAKI,MAAMZ,cAChBf,EAMpC,GALAuB,KAAKW,SAAS,CACZnB,eACAC,cAAc,IAGN,MAANhB,EAAU,CACZ,IAAMyC,EAAIlB,KAAKI,MAAMT,QACfwB,EAAWC,WAAW5B,GACtBE,EAAMI,OAAAgB,wJAAA,EAAAhB,CAAOE,KAAKI,MAAMV,QAC9BA,EAAOwB,GAAKC,EACZnB,KAAKW,SAAS,CAAEjB,WAGP,MAANjB,GAA2C,MAA5BuB,KAAKI,MAAMZ,cAE7BQ,KAAKW,SAAS,CAAEnB,aAAc,yCAMhC,OACE6B,2CAAAzC,EAAAC,cAAA,OAAKK,UAAU,cACbmC,2CAAAzC,EAAAC,cAACyC,kDAAA,EAAD,CAASN,MAAOhB,KAAKI,MAAMZ,eAC3B6B,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,KAAKD,MAAOgB,KAAKM,YAAahB,QAAM,IAClD+B,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKS,aAAcrB,WAAS,IACrDiC,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKU,WAC9BW,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKU,WAC9BW,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKU,WAC9BW,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKS,aAAcrB,WAAS,IACrDiC,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKU,WAC9BW,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKU,WAC9BW,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKU,WAC9BW,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKS,aAAcrB,WAAS,IACrDiC,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKU,WAC9BW,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKU,WAC9BW,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKU,WAC9BW,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKS,aAAcrB,WAAS,IACrDiC,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKU,SAAUrB,QAAM,IAC9CgC,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKU,WAC9BW,2CAAAzC,EAAAC,cAAC0C,iDAAA,EAAD,CAAQtC,MAAM,IAAID,MAAOgB,KAAKS,aAAcrB,WAAS,qBAjGrBoC,+ECjBxC,IAAAlD,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAC,EAAA,IAGeG,EAAA,WAAAC,GAAK,OAClBH,EAAAI,EAAAC,cAAA,OAAKK,UAAU,WACZP,EAAMqC,gNCOSS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOC,EAAApD,EAAAC,cAACe,EAAA,EAAD,MAAgBqC,SAASC,eAAe,SD2HlD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.742bcba5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nexport default props => (\r\n  <button\r\n  onClick={e => props.click && props.click(props.label)}\r\n  className={`\r\n            button\r\n            ${props.operation ? 'operation' : ''}\r\n            ${props.double ? 'double' : ''}\r\n            ${props.triple ? 'triple' : ''}\r\n        `}\r\n>\r\n  {props.label}\r\n</button>\r\n);\r\n","import React, { Component } from 'react';\r\n\r\n\r\nimport './Calculator.css';\r\n\r\nimport Button from '../components/Button';\r\nimport Display from '../components/Display';\r\n\r\n\r\n\r\nconst initialState = {\r\n  displayValue: '0',\r\n  clearDisplay: false,\r\n  operation: null,\r\n  values: [0, 0],\r\n  current: 0\r\n}\r\nexport default class Calculator extends Component {\r\n\r\n  state = { ...initialState}\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.clearMemory = this.clearMemory.bind(this);\r\n    this.setOperation = this.setOperation.bind(this);\r\n    this.addDigit = this.addDigit.bind(this);\r\n  }\r\n\r\n\r\n\r\n  clearMemory() {\r\n    this.setState({ ...initialState })\r\n  }\r\n\r\n  setOperation(operation) {\r\n    if(this.state.current === 0){\r\n      if(operation !== '=')\r\n        this.setState({ operation, current: 1, clearDisplay: true})\r\n    }else{\r\n      const equals = operation === '='\r\n      const currentOperation = this.state.operation\r\n      \r\n\r\n      const values = [...this.state.values]\r\n      try{\r\n        values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`)\r\n      } catch (e) {\r\n        values[0] = this.state.value[0]\r\n      }\r\n     \r\n      values[1] = 0\r\n\r\n      this.setState({\r\n        displayValue: values[0],\r\n        operation: equals ? null : operation, \r\n        current: equals ? 0 : 1,\r\n        clearDisplay: !equals,\r\n        values\r\n      })\r\n    }\r\n  }\r\n\r\n  addDigit(n) {\r\n    if (n === '.' && this.state.displayValue.includes('.')){\r\n      return\r\n    }\r\n\r\n    \r\n\r\n    const clearDisplay = this.state.displayValue === '0'\r\n      || this.state.clearDisplay\r\n    const currentValue = clearDisplay ? '' : this.state.displayValue\r\n    const displayValue = currentValue + n\r\n    this.setState({\r\n      displayValue,\r\n      clearDisplay: false\r\n    }) \r\n\r\n    if (n !== '.'){\r\n      const i = this.state.current\r\n      const newValue = parseFloat(displayValue)\r\n      const values = [...this.state.values]\r\n      values[i] = newValue\r\n      this.setState({ values })\r\n    }\r\n\r\n    if ((n === '.') && (this.state.displayValue === '0')) {\r\n  \r\n      this.setState({ displayValue: '0.' })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calculator\">\r\n        <Display value={this.state.displayValue} />\r\n        <Button label=\"AC\" click={this.clearMemory} triple />\r\n        <Button label=\"/\" click={this.setOperation} operation />\r\n        <Button label=\"7\" click={this.addDigit} />\r\n        <Button label=\"8\" click={this.addDigit} />\r\n        <Button label=\"9\" click={this.addDigit} />\r\n        <Button label=\"*\" click={this.setOperation} operation />\r\n        <Button label=\"4\" click={this.addDigit} />\r\n        <Button label=\"5\" click={this.addDigit} />\r\n        <Button label=\"6\" click={this.addDigit} />\r\n        <Button label=\"-\" click={this.setOperation} operation />\r\n        <Button label=\"1\" click={this.addDigit} />\r\n        <Button label=\"2\" click={this.addDigit} />\r\n        <Button label=\"3\" click={this.addDigit} />\r\n        <Button label=\"+\" click={this.setOperation} operation />\r\n        <Button label=\"0\" click={this.addDigit} double />\r\n        <Button label=\".\" click={this.addDigit} />\r\n        <Button label=\"=\" click={this.setOperation} operation />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Display.css';\r\n\r\nexport default props => (\r\n  <div className=\"display\">\r\n    {props.value}\r\n  </div>\r\n);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './main/Calculator';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}